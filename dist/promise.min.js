!function(){"use strict";var a={PENDING:0,FULFILLED:1,REJECTED:2},b=function(a){return null!==a&&"object"==typeof a},c=function(a){return"function"==typeof a},d=function(b){var d=a.PENDING,f=null;this.reactions=[],this.getState=function(){return d},this.setState=function(b,c){return d===a.PENDING?(d=b,f=c,!0):!1},this.getResult=function(){return f},c(b)&&e(b,this.resolve.bind(this),this.reject.bind(this))},e=function(a,b,c){var d=!1;try{a(function(a){d===!1&&(d=!0,b(a))},function(a){d===!1&&(d=!0,c(a))})}catch(e){d===!1&&c(e)}};d.cast=function(a){return b(a)&&a instanceof d?a:(new d).resolve(a)},d.resolve=function(a){return(new d).resolve(a)},d.reject=function(a){return(new d).reject(a)},d.all=function(a){return new d(function(b,c){for(var d=a.length,e=[],f=function(a){return function(c){e[a]=c,0===--d&&b(e)}},g=function(a){d=0,c(a)},h=0;h<a.length;h++)a[h].then(f(h),g)})},d.race=function(a){return new d(function(b,c){for(var d=!0,e=function(a){d&&(d=!1,b(a))},f=function(a){d&&(d=!1,c(a))},g=0;g<a.length;g++)a[g].then(e,f)})},d.prototype.resolve=function(d){try{if(d===this)throw new TypeError("Return value cannot refer to the same promise!");if(b(d)||c(d)){var f=d.then;if(c(f))return e(f.bind(d),this.resolve.bind(this),this.reject.bind(this)),this}this.setState(a.FULFILLED,d)&&this.notify()}catch(g){this.reject(g)}return this},d.prototype.reject=function(b){return this.setState(a.REJECTED,b)&&this.notify(),this},d.prototype.notify=function(){for(var a,b=this.getResult(),c=this.getState();this.reactions.length;)a=this.reactions.shift(),f(a,c,b)};var f=function(b,c,d){var e=b.promise,f=c===a.FULFILLED,g=f?"onFulfilled":"onRejected",h=b[g];setTimeout(function(){try{"function"==typeof h?(d=h(d),e.resolve(d)):f?e.resolve(d):e.reject(d)}catch(a){e.reject(a)}},0)};d.prototype.then=function(b,c){var e=new d;return this.reactions.push({promise:e,onFulfilled:b,onRejected:c}),this.getState()!==a.PENDING&&this.notify(),e},d.prototype.catch=function(a){return this.then(void 0,a)},module.exports=d}();
//# sourceMappingURL=promise.min.map